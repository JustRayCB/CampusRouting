import networkx as nx
import matplotlib.pyplot as plt


class SolboschGraph(nx.Graph):
    """
    Represents the Solbosch campus as a graph

    Nodes starting with "b_" are the buildings
    Nodes starting with "c_" are the crossroads
    Nodes starting with "e_" are the entrances of the campus
    """

    def __init__(self):
        super(SolboschGraph, self).__init__()

        # Roads between two crossroads:
        self.ROADS = [["c_1", "c_2", 13], ["c_1", "c_11", 7], ["c_1", "c_51", 13], ["c_2", "c_3", 14],
                      ["c_2", "c_13", 6], ["c_2", "c_52", 15], ["c_3", "c_4", 12], ["c_3", "c_29", 6],
                      ["c_4", "c_5", 11], ["c_5", "c_6", 6], ["c_6", "c_7", 10], ["c_6", "c_49", 21],
                      ["c_6", "c_79", 17], ["c_7", "c_8", 5], ["c_8", "c_9", 8], ["c_8", "c_41", 12],
                      ["c_9", "c_10", 7], ["c_9", "c_40", 10], ["c_11", "c_12", 7], ["c_12", "c_14", 10],
                      ["c_12", "c_104", 7], ["c_13", "c_14", 6], ["c_14", "c_15", 3], ["c_15", "c_16", 3],
                      ["c_16", "c_17", 13], ["c_16", "c_27", 12], ["c_16", "c_104", 19], ["c_17", "c_18", 11],
                      ["c_18", "c_19", 12], ["c_18", "c_30", 7], ["c_19", "c_20", 4], ["c_20", "c_21", 8],
                      ["c_20", "c_25", 15], ["c_20", "c_26", 24], ["c_21", "c_22", 8], ["c_21", "c_25", 12],
                      ["c_22", "c_23", 24], ["c_22", "c_25", 15], ["c_23", "c_24", 8], ["c_23", "c_25", 15],
                      ["c_24", "c_25", 12], ["c_24", "c_26", 8], ["c_25", "c_26", 15], ["c_26", "c_27", 4],
                      ["c_27", "c_28", 3], ["c_28", "c_29", 9], ["c_31", "c_32", 28], ["c_32", "c_33", 22],
                      ["c_34", "c_35", 12], ["c_34", "c_36", 10], ["c_35", "c_36", 18], ["c_36", "c_37", 10],
                      ["c_37", "c_38", 7], ["c_39", "c_40", 7], ["c_40", "c_41", 11], ["c_41", "c_42", 12],
                      ["c_42", "c_43", 4], ["c_43", "c_44", 10], ["c_43", "c_49", 9], ["c_44", "c_45", 10],
                      ["c_44", "c_48", 9], ["c_45", "c_46", 5], ["c_46", "c_47", 4], ["c_47", "c_48", 10],
                      ["c_48", "c_49", 10], ["c_51", "c_52", 12], ["c_52", "c_53", 5], ["c_52", "c_70", 7],
                      ["c_53", "c_54", 7], ["c_53", "c_68", 5], ["c_54", "c_55", 3], ["c_54", "c_67", 5],
                      ["c_55", "c_56", 7], ["c_56", "c_57", 14], ["c_56", "c_60", 28], ["c_57", "c_58", 11],
                      ["c_58", "c_59", 27], ["c_59", "c_60", 10], ["c_60", "c_61", 12], ["c_61", "c_62", 5],
                      ["c_61", "c_99", 13], ["c_62", "c_63", 14], ["c_63", "c_64", 6], ["c_64", "c_65", 5],
                      ["c_65", "c_66", 6], ["c_65", "c_74", 3], ["c_66", "c_67", 10], ["c_66", "c_73", 3],
                      ["c_67", "c_68", 5], ["c_68", "c_69", 4], ["c_69", "c_70", 4], ["c_69", "c_72", 6],
                      ["c_70", "c_71", 4], ["c_71", "c_72", 5], ["c_71", "c_78", 13], ["c_72", "c_73", 13],
                      ["c_72", "c_77", 11], ["c_73", "c_74", 6], ["c_74", "c_75", 5], ["c_74", "c_98", 15],
                      ["c_75", "c_76", 9], ["c_75", "c_100", 15], ["c_76", "c_77", 23], ["c_76", "c_95", 16],
                      ["c_77", "c_78", 5], ["c_77", "c_80", 20], ["c_78", "c_79", 20], ["c_79", "c_80", 5],
                      ["c_80", "c_81", 9], ["c_81", "c_82", 5], ["c_81", "c_94", 23], ["c_82", "c_83", 7],
                      ["c_82", "c_84", 14], ["c_83", "c_93", 12], ["c_84", "c_85", 16], ["c_85", "c_86", 12],
                      ["c_87", "c_93", 15], ["c_88", "c_90", 10], ["c_90", "c_94", 32], ["c_93", "c_94", 7],
                      ["c_94", "c_95", 13], ["c_95", "c_96", 6], ["c_96", "c_97", 24], ["c_97", "c_100", 6],
                      ["c_98", "c_99", 4], ["c_99", "c_100", 3], ["c_100", "c_101", 15]]

        # Roads between an entrance and a crossroad or between two entrances:
        self.ENTRANCES_ROADS = [["e_1", "c_1", 6], ["e_1", "c_103", 18], ["e_2", "c_58", 7], ["e_2", "e_3", 26],
                        ["e_2", "c_103", 28], ["e_3", "c_59", 15], ["e_4", "c_101", 9], ["e_4", "c_102", 14],
                        ["e_4", "e_5", 19], ["e_5", "c_92", 10], ["e_5", "c_102", 10], ["e_6", "c_91", 4],
                        ["e_6", "c_92", 6], ["e_7", "c_89", 7], ["e_7", "c_90", 3], ["e_7", "c_91", 5],
                        ["e_7", "e_8", 9], ["e_8", "c_88", 7], ["e_8", "c_89", 8], ["e_9", "c_86", 12],
                        ["e_9", "c_87", 14], ["e_9", "c_88", 12], ["e_10", "c_85", 4], ["e_10", "c_86", 11],
                        ["e_11", "c_10", 8], ["e_11", "c_50", 16], ["e_11", "c_85", 13], ["e_11", "e_12", 25],
                        ["e_12", "c_39", 13], ["e_12", "e_13", 15], ["e_13", "c_37", 12], ["e_13", "c_38", 16],
                        ["e_14", "c_34", 22], ["e_14", "c_36", 20], ["e_14", "c_47", 16], ["e_14", "e_15", 17],
                        ["e_14", "e_17", 40], ["e_15", "c_33", 6], ["e_15", "e_16", 24], ["e_16", "c_31", 6],
                        ["e_16", "e_17", 7], ["e_17", "c_30", 6]]

        # Roads between a building and a crossroad
        self.ROADS_TO_BUILDINGS = [["b_B", "c_55", 5], ["b_B", "c_66", 1], ["b_C", "c_58", 1], ["b_C", "c_59", 1],
                       ["b_E", "c_62", 1], ["b_K", "c_64", 1], ["b_K", "c_98", 1], ["b_M", "c_68", 1],
                       ["b_O", "c_57", 1], ["b_0", "c_58", 5], ["b_V", "c_51", 1], ["b_Y", "c_55", 1],
                       ["b_105", "c_103", 5], ["b_F1", "c_3", 8], ["b_F1", "c_4", 6], ["b_F1", "c_5", 6],
                       ["b_F1", "c_78", 4], ["b_D", "c_19", 7], ["b_D", "c_30", 1], ["b_DE15", "c_33", 1],
                       ["b_DE31", "c_31", 1], ["b_G", "c_32", 5], ["b_L", "c_17", 1], ["b_P1", "c_13", 3],
                       ["b_P1", "c_29", 3], ["b_P2", "c_15", 3], ["b_P2", "c_29", 3], ["b_P3", "c_11", 3],
                       ["b_P3", "c_13", 3], ["b_P4", "c_15", 3], ["b_P4", "c_104", 3], ["b_T1", "c_17", 3],
                       ["b_T2", "c_17", 3], ["b_T3", "c_18", 1], ["b_Ua", "c_21", 1], ["b_Ub", "c_22", 1],
                       ["b_Ub", "c_47", 1], ["b_Uc", "c_23", 1], ["b_Uc", "c_49", 1], ["b_Ud", "c_4", 5],
                       ["b_Ud", "c_24", 1], ["b_Aw", "c_39", 1], ["b_Aw", "c_42", 5], ["b_Ax", "c_44", 1],
                       ["b_Ay", "c_38", 1], ["b_Ay", "c_45", 3], ["b_Az", "c_46", 11], ["b_DE1", "c_34", 3],
                       ["b_NA", "c_43", 1], ["b_NB", "c_6", 1], ["b_RT1719", "c_50", 8], ["b_RT3941", "c_35", 3],
                       ["b_VA45", "c_50", 15], ["b_F2", "c_89", 18], ["b_H", "c_7", 3], ["b_H", "c_10", 3],
                       ["b_J", "c_83", 3], ["b_J", "c_84", 3], ["b_J", "c_86", 5], ["b_J", "c_87", 10],
                       ["b_JE38", "c_101", 1], ["b_JE52", "c_92", 3], ["b_JE56", "c_92", 3], ["b_JE5860", "c_91", 3],
                       ["b_S", "c_96", 3], ["b_S", "c_102", 6], ["b_SI", "c_97", 3]]

        self.add_weighted_edges_from(self.ROADS)
        self.add_weighted_edges_from(self.ENTRANCES_ROADS)
        self.add_weighted_edges_from(self.ROADS_TO_BUILDINGS)

    def show_graph(self):
        """
        Shows the graph of the Solbosch campus
        """
        pos = nx.spring_layout(self)
        nx.draw_networkx_nodes(self, pos)
        nx.draw_networkx_edges(self, pos)
        nx.draw_networkx_labels(self, pos)
        edge_labels = nx.get_edge_attributes(self, "weight")
        nx.draw_networkx_edge_labels(self, pos, edge_labels)
        plt.show()


if __name__ == "__main__":
    g = SolboschGraph()
    g.show_graph()